Application: Piece of code eg. online banking,online shopping
Different type of appln 
standalone,web and enterprise

standalone:installed on laptop and access on laptop only eg: vlc player, ms office
web:website access this appln across through globe eg:www.edureka.com (webserver)
entreprise: online banking,ebusinesss application,amazon, flipkart(sophisticated env)


Webserver:
Apache
nginx
tomcat
iis

Application server:
Webspere
jboss
glassfish
weblogic

wrting code is one part and hosting is second part

server that serve some thing whatever end user request
client--> applnt--> db  (3 tier architecture)

Authorization: you are authorized to perform that action or not
Authentication: validating the credential.


s/w engineering 
devlopemnt , operation(hosting) maintenance(maintain the appln)

eg:Android
IOS

waterfall model
step by step approach 
requirement gthering-->design-->code->testing-->deployment -->maint
tightly coupled(monolithic arch)
All the application on single machine such as db, appln etc is called the monolithic architecture eg:hotel application

Agile
everything can be done in parellel
It is continuous improvement process
N-tier architecture
webeserver on another server
db on the another server
distributed arch
physical server to virtual server
dc to hosted environment

Devops
Microservices
container(Docker)
cloud(AWS,Azure,GCP,Digital ocean, Open shift):Pay as you use

Agile is fast and iterative
docter eg for the different environment

devops is a re-organisation not a new team to hire
it is combined effort of devlopment and operation team
to release application faster way
to give new feature to the client in faster way
agile operation delivery
Agile: 3 Months
Devops: 9 min
For every changes or feature is creating we need to push it to deployment, no need to wait as it will create easy way to identify the issue as we compare if we push 100 feature to deployment
three pillars:
Infrastructure automation
continuous delivery
reliablity engineering 
nevere ending process
automate infra
continuos delivery
Waterfall model:
design-->code-->test-->deploy

Agile:
design-->code-->test-->design-->code-->test-->design-->code-->test-->design-->code-->test-->deploy

Agile with continuos deploy:
design-->code-->test-->deploy-->design-->code-->test-->deploy-->design-->code-->test-->deploy-->design-->code-->test-->deploy-->design-->code-->test-->deploy

Devops Lifecycle
1)planning tool:trello rally jira
2)coding tools:eclipse
3)build tools:maven
4)test tool:junit,selenium
5)release:jenkin, travis , bamboo
6)deploy:ansible, chef,puppet
7)operate:
8)monitoring:nagios

version control or SCM
track your code.
multiple user manage multiple revision of same unit of information
1)local: mantain it in your local machine
2)centralized:central server if central server fail then entire system goes down
3)Distributed:Remote server and local machine if any server goes down it can be restore(GIT)
local repo is the user copy and user access through local copy and push it to the remote repo if there are any changes	

mkdir prj--> make the directory
git init--> initialize the prj one time initialization
git config --global user.name username
git config --global user.email useremail
commit id 
you can tag version to commit id
-----------------------------------------------------------------------------------------------------------------------
1. make your changes create delete update to prj code
2.add them to local git repo (staging).eg file download to temp area while downloading the file from internet
3.commit them


git log (which will show what are the changes you made to the prj time, user, author, commit id(hexadecimal))
last commited change is called as head(recent commit)
staging area is like playground
git log --oneline (in shortform)
when you want to make multiple changes staging is the good option
whatever add to git it would takecare of that.
ls -a
cd .git

git rm filename =rm +git add
git rm --cached file1 (going frwd it will not track file1)
git rm -f file1 = forcefully remove the file git repo 
vi .gitignore(mention the file name)

